{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/leangualeap/src/lib/actions.ts"],"sourcesContent":["\n'use server';\n\nimport { generateWordOptions } from \"@/ai/flows/generate-word-options\";\nimport { z } from \"zod\";\nimport { redirect } from \"next/navigation\";\n\n// --- WORD ACTIONS ---\n\nconst addWordSchema = z.object({\n  word: z.string().min(1, \"Word is required.\"),\n  definition: z.string().min(1, \"Definition is required.\"),\n  imageDataUri: z.string().min(1, \"Image data is required.\"),\n});\n\n// This action ONLY calls the AI and returns the options.\n// The client is responsible for creating the word and saving it to storage.\nexport async function getAiWordOptions(data: {\n    word: string;\n    definition: string;\n    imageDataUri: string;\n}) {\n    const validatedFields = addWordSchema.safeParse(data);\n\n    if (!validatedFields.success) {\n        const errorMap = validatedFields.error.flatten().fieldErrors;\n        const firstError = Object.values(errorMap)[0]?.[0] || \"Validation failed.\";\n        return {\n            errors: errorMap,\n            message: firstError,\n            success: false,\n            options: null,\n        };\n    }\n  \n    try {\n        const aiResponse = await generateWordOptions({\n            word: data.word,\n            definition: data.definition,\n            explanatoryImage: data.imageDataUri,\n        });\n\n        if (!aiResponse?.options || aiResponse.options.length < 3) {\n            throw new Error(\"AI did not return the expected number of options.\");\n        }\n        \n        return { success: true, options: aiResponse.options, message: \"\" };\n\n    } catch (error) {\n        console.error(\"Error during word option generation:\", error);\n        const errorMessage = \"Failed to add word. The AI could not process the request. Please try a different word or image.\";\n        return { message: errorMessage, success: false, options: null };\n    }\n}\n\n// --- AUTH ACTIONS ---\n\nexport async function redirectToDashboard(userId: string) {\n    redirect(`/dashboard?userId=${userId}`);\n}\n"],"names":[],"mappings":";;;;;;IAiBsB,mBAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["file:///home/user/leangualeap/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;;AAGb,MAAM,WAAW,GAAG,oKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 62, "column": 0}, "map": {"version":3,"sources":["file:///home/user/leangualeap/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport {cn} from '@/lib/utils';\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, React.ComponentProps<'textarea'>>(\n  ({className, ...props}, ref) => {\n    return (\n      <textarea\n        className={cn(\n          'flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm',\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\nTextarea.displayName = 'Textarea';\n\nexport {Textarea};\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC9B,CAAC,EAAC,SAAS,EAAE,GAAG,OAAM,EAAE;IACtB,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qTACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 97, "column": 0}, "map": {"version":3,"sources":["file:///home/user/leangualeap/src/components/ui/select.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 312, "column": 0}, "map": {"version":3,"sources":["file:///home/user/leangualeap/src/components/add-word-form.tsx"],"sourcesContent":["\n\"use client\";\n\nimport { getAiWordOptions } from \"@/lib/actions\";\nimport { Label } from \"@/components/ui/label\";\nimport { Input } from \"@/components/ui/input\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Button } from \"@/components/ui/button\";\nimport { useRef, useState } from \"react\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { Loader2 } from \"lucide-react\";\nimport { useRouter, useSearchParams } from \"next/navigation\";\nimport { type Word } from \"@/lib/data\";\nimport { getWordsBySupervisor, addWordDB } from \"@/lib/firestore\";\nimport { useLanguage } from \"@/hooks/use-language\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\n\n\nconst toBase64 = (file: File): Promise<string> =>\n  new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => resolve(reader.result as string);\n    reader.onerror = (error) => reject(error);\n  });\n\nexport function AddWordForm() {\n  const { toast } = useToast();\n  const { t } = useLanguage();\n  const searchParams = useSearchParams();\n  const router = useRouter();\n  const formRef = useRef<HTMLFormElement>(null);\n  const [isPending, setIsPending] = useState(false);\n  const [unit, setUnit] = useState<string>(\"\");\n  const [lesson, setLesson] = useState<string>(\"\");\n  \n  const userId = searchParams.get(\"userId\") || \"sup1\";\n\n  const handleSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    setIsPending(true);\n\n    const formData = new FormData(event.currentTarget);\n    const wordInput = formData.get(\"word\") as string;\n    const definitionInput = formData.get(\"definition\") as string;\n    const imageInput = formData.get(\"image\") as File;\n    const unitInput = unit;\n    const lessonInput = lesson;\n\n    // --- Client-side validation ---\n    if (!wordInput || !definitionInput || !imageInput || imageInput.size === 0 || !unitInput || !lessonInput) {\n        toast({\n            title: t('toasts.error'),\n            description: \"Please fill out all required fields (Unit, Lesson, Word, Definition, Image).\",\n            variant: \"destructive\",\n        });\n        setIsPending(false);\n        return;\n    }\n\n    try {\n        const supervisorWords = await getWordsBySupervisor(userId);\n        if (supervisorWords.some(w => w.word.toLowerCase() === wordInput.toLowerCase())) {\n            toast({\n                title: t('toasts.error'),\n                description: \"This word already exists in your collection.\",\n                variant: \"destructive\",\n            });\n            setIsPending(false);\n            return;\n        }\n\n        const imageDataUri = await toBase64(imageInput);\n\n        // --- Server action call for AI part only ---\n        const result = await getAiWordOptions({\n            word: wordInput,\n            definition: definitionInput,\n            imageDataUri: imageDataUri\n        });\n\n        if (result.success && result.options) {\n            // Assemble the full word object on the client\n            const newWord: Word = {\n                id: `word${Date.now()}`,\n                word: wordInput,\n                definition: definitionInput,\n                unit: unitInput,\n                lesson: lessonInput,\n                imageUrl: imageDataUri,\n                options: [...result.options, wordInput], // AI options + correct option\n                correctOption: wordInput,\n                supervisorId: userId,\n                arabicTranslation: \"\",\n            };\n\n            // Save to Firestore\n            await addWordDB(newWord);\n            \n            toast({\n                title: t('toasts.success'),\n                description: t('toasts.addWordSuccess'),\n            });\n            \n            formRef.current?.reset();\n            router.push(`/dashboard/words?userId=${userId}`);\n            router.refresh(); // Force a refresh to show the new word\n\n        } else {\n            const errorMessage = result.message || \"An unknown error occurred.\";\n            toast({\n                title: t('toasts.error'),\n                description: errorMessage,\n                variant: \"destructive\",\n            });\n        }\n    } catch (e: any) {\n         console.error(\"An unexpected error occurred:\", e);\n         toast({\n            title: t('toasts.error'),\n            description: e.message || \"An unexpected error occurred. Please check the console.\",\n            variant: \"destructive\",\n         });\n    } finally {\n        setIsPending(false);\n    }\n  };\n\n  return (\n    <form \n      ref={formRef} \n      onSubmit={handleSubmit}\n      className=\"space-y-4\"\n    >\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n        <div className=\"grid gap-2\">\n            <Label htmlFor=\"unit\">{t('addWord.form.unitLabel')}</Label>\n            <Select onValueChange={setUnit} name=\"unit\">\n                <SelectTrigger>\n                    <SelectValue placeholder={t('addWord.form.unitPlaceholder')} />\n                </SelectTrigger>\n                <SelectContent>\n                    {Array.from({ length: 8 }, (_, i) => i + 1).map(u => (\n                        <SelectItem key={u} value={`Unit ${u}`}>{`Unit ${u}`}</SelectItem>\n                    ))}\n                </SelectContent>\n            </Select>\n        </div>\n        <div className=\"grid gap-2\">\n            <Label htmlFor=\"lesson\">{t('addWord.form.lessonLabel')}</Label>\n            <Select onValueChange={setLesson} name=\"lesson\">\n                 <SelectTrigger>\n                    <SelectValue placeholder={t('addWord.form.lessonPlaceholder')} />\n                </SelectTrigger>\n                <SelectContent>\n                    {Array.from({ length: 8 }, (_, i) => i + 1).map(l => (\n                        <SelectItem key={l} value={`Lesson ${l}`}>{`Lesson ${l}`}</SelectItem>\n                    ))}\n                </SelectContent>\n            </Select>\n        </div>\n      </div>\n      <div className=\"grid gap-2\">\n        <Label htmlFor=\"word\">{t('addWord.form.wordLabel')}</Label>\n        <Input id=\"word\" name=\"word\" placeholder={t('addWord.form.wordPlaceholder')} required />\n      </div>\n      <div className=\"grid gap-2\">\n        <Label htmlFor=\"definition\">{t('addWord.form.definitionLabel')}</Label>\n        <Textarea\n          id=\"definition\"\n          name=\"definition\"\n          placeholder={t('addWord.form.definitionPlaceholder')}\n          required\n        />\n      </div>\n      <div className=\"grid gap-2\">\n        <Label htmlFor=\"image\">{t('addWord.form.imageLabel')}</Label>\n        <Input id=\"image\" name=\"image\" type=\"file\" accept=\"image/*\" required />\n      </div>\n      <Button type=\"submit\" disabled={isPending} className=\"w-full\">\n        {isPending ? (\n            <>\n            <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n            {t('addWord.form.addingButton')}\n            </>\n        ) : (\n            t('addWord.form.addButton')\n        )}\n        </Button>\n    </form>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 698, "column": 0}, "map": {"version":3,"sources":["file:///home/user/leangualeap/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 801, "column": 0}, "map": {"version":3,"sources":["file:///home/user/leangualeap/src/app/dashboard/add-word/page.tsx"],"sourcesContent":["\n\"use client\";\n\nimport { AddWordForm } from \"@/components/add-word-form\";\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\";\nimport { useLanguage } from \"@/hooks/use-language\";\n\nexport default function AddWordPage() {\n  const { t } = useLanguage();\n\n  return (\n    <div className=\"space-y-6\">\n      <h1 className=\"text-3xl font-bold font-headline\">{t('addWord.title')}</h1>\n      <p className=\"text-muted-foreground\">\n        {t('addWord.description')}\n      </p>\n      <Card className=\"max-w-2xl\">\n        <CardHeader>\n          <CardTitle>{t('addWord.cardTitle')}</CardTitle>\n          <CardDescription>\n            {t('addWord.cardDescription')}\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          <AddWordForm />\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAGA;AACA;AAOA;;;AAVA;;;;AAYe,SAAS;;IACtB,MAAM,EAAE,CAAC,EAAE,GAAG,CAAA,GAAA,mIAAA,CAAA,cAAW,AAAD;IAExB,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAG,WAAU;0BAAoC,EAAE;;;;;;0BACpD,6LAAC;gBAAE,WAAU;0BACV,EAAE;;;;;;0BAEL,6LAAC,mIAAA,CAAA,OAAI;gBAAC,WAAU;;kCACd,6LAAC,mIAAA,CAAA,aAAU;;0CACT,6LAAC,mIAAA,CAAA,YAAS;0CAAE,EAAE;;;;;;0CACd,6LAAC,mIAAA,CAAA,kBAAe;0CACb,EAAE;;;;;;;;;;;;kCAGP,6LAAC,mIAAA,CAAA,cAAW;kCACV,cAAA,6LAAC,4IAAA,CAAA,cAAW;;;;;;;;;;;;;;;;;;;;;;AAKtB;GAtBwB;;QACR,mIAAA,CAAA,cAAW;;;KADH","debugId":null}}]
}