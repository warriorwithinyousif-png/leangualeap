{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/leangualeap/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,4VACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 74, "column": 0}, "map": {"version":3,"sources":["file:///home/user/leangualeap/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC3B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,6LAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kYACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 110, "column": 0}, "map": {"version":3,"sources":["file:///home/user/leangualeap/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;;AAGb,MAAM,WAAW,GAAG,oKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 149, "column": 0}, "map": {"version":3,"sources":["file:///home/user/leangualeap/src/components/logo.tsx"],"sourcesContent":["import { cn } from \"@/lib/utils\";\n\nexport function Logo({ className }: { className?: string }) {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      className={cn(\"h-8 w-8\", className)}\n    >\n      <path d=\"M2 3h6a4 4 0 0 1 4 4v14a3 3 0 0 0-3-3H2z\"  className=\"text-primary\" fill=\"hsl(var(--primary))\" stroke=\"hsl(var(--primary))\" />\n      <path d=\"M22 3h-6a4 4 0 0 0-4 4v14a3 3 0 0 1 3-3h7z\"  className=\"text-primary\" />\n    </svg>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;;;AAEO,SAAS,KAAK,EAAE,SAAS,EAA0B;IACxD,qBACE,6LAAC;QACC,OAAM;QACN,SAAQ;QACR,MAAK;QACL,QAAO;QACP,aAAY;QACZ,eAAc;QACd,gBAAe;QACf,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,WAAW;;0BAEzB,6LAAC;gBAAK,GAAE;gBAA4C,WAAU;gBAAe,MAAK;gBAAsB,QAAO;;;;;;0BAC/G,6LAAC;gBAAK,GAAE;gBAA8C,WAAU;;;;;;;;;;;;AAGtE;KAhBgB","debugId":null}},
    {"offset": {"line": 204, "column": 0}, "map": {"version":3,"sources":["file:///home/user/leangualeap/src/lib/firebaseConfig.ts"],"sourcesContent":["// THIS IS A SERVER-ONLY FILE\n// It is safe to read environment variables here.\n\nconst firebaseConfig = {\n  apiKey: process.env.NEXT_PUBLIC_FIREBASE_API_KEY,\n  authDomain: process.env.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.NEXT_PUBLIC_FIREBASE_APP_ID,\n  measurementId: process.env.NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID,\n};\n\n// Comprehensive check for all required environment variables\nif (\n  !firebaseConfig.apiKey ||\n  !firebaseConfig.authDomain ||\n  !firebaseConfig.projectId ||\n  !firebaseConfig.storageBucket ||\n  !firebaseConfig.messagingSenderId ||\n  !firebaseConfig.appId\n) {\n  throw new Error(`\n    One or more Firebase environment variables are missing.\n    Please ensure your .env file contains all the following, prefixed with NEXT_PUBLIC_:\n    - NEXT_PUBLIC_FIREBASE_API_KEY\n    - NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN\n    - NEXT_PUBLIC_FIREBASE_PROJECT_ID\n    - NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET\n    - NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID\n    - NEXT_PUBLIC_FIREBASE_APP_ID\n    - NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID\n  `);\n}\n\nexport { firebaseConfig };\n"],"names":[],"mappings":"AAAA,6BAA6B;AAC7B,iDAAiD;;;;AAGvC;AADV,MAAM,iBAAiB;IACrB,MAAM;IACN,UAAU;IACV,SAAS;IACT,aAAa;IACb,iBAAiB;IACjB,KAAK;IACL,aAAa;AACf;AAEA,6DAA6D;AAC7D,IACE,CAAC,eAAe,MAAM,IACtB,CAAC,eAAe,UAAU,IAC1B,CAAC,eAAe,SAAS,IACzB,CAAC,eAAe,aAAa,IAC7B,CAAC,eAAe,iBAAiB,IACjC,CAAC,eAAe,KAAK,EACrB;IACA,MAAM,IAAI,MAAM,CAAC;;;;;;;;;;EAUjB,CAAC;AACH","debugId":null}},
    {"offset": {"line": 243, "column": 0}, "map": {"version":3,"sources":["file:///home/user/leangualeap/src/lib/firebase.ts"],"sourcesContent":["\n'use client';\n\nimport { initializeApp, getApps, getApp, type FirebaseApp } from \"firebase/app\";\nimport { getAuth } from \"firebase/auth\";\nimport { initializeFirestore, persistentLocalCache } from \"firebase/firestore\";\nimport { firebaseConfig } from \"./firebaseConfig\"; // Import the config from the server-only file\n\n// Initialize Firebase\nconst app: FirebaseApp = getApps().length ? getApp() : initializeApp(firebaseConfig);\nconst auth = getAuth(app);\n\n// Initialize Firestore with a stable persistence setting.\nconst db = initializeFirestore(app, {\n  localCache: persistentLocalCache(/* settings */)\n});\n\nexport { app, auth, db };\n"],"names":[],"mappings":";;;;;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AACA,gOAAmD,8CAA8C;AALjG;;;;;AAOA,sBAAsB;AACtB,MAAM,MAAmB,CAAA,GAAA,uLAAA,CAAA,UAAO,AAAD,IAAI,MAAM,GAAG,CAAA,GAAA,uLAAA,CAAA,SAAM,AAAD,MAAM,CAAA,GAAA,uLAAA,CAAA,gBAAa,AAAD,EAAE,+HAAA,CAAA,iBAAc;AACnF,MAAM,OAAO,CAAA,GAAA,yOAAA,CAAA,UAAO,AAAD,EAAE;AAErB,0DAA0D;AAC1D,MAAM,KAAK,CAAA,GAAA,sKAAA,CAAA,sBAAmB,AAAD,EAAE,KAAK;IAClC,YAAY,CAAA,GAAA,sKAAA,CAAA,uBAAoB,AAAD;AACjC","debugId":null}},
    {"offset": {"line": 277, "column": 0}, "map": {"version":3,"sources":["file:///home/user/leangualeap/src/lib/firestore.ts"],"sourcesContent":["\n\n'use client';\n\nimport {\n    collection,\n    doc,\n    getDoc,\n    getDocs,\n    setDoc,\n    deleteDoc,\n    writeBatch,\n    query,\n    where,\n    Timestamp,\n    orderBy,\n    runTransaction,\n} from 'firebase/firestore';\nimport { db } from './firebase'; // Import the initialized db instance\nimport type { User, Word, Message, SupervisorMessage, PeerMessage } from './data';\nimport type { WordProgress } from './storage';\nimport { addYears } from 'date-fns';\nimport { isToday as dateFnsIsToday } from 'date-fns';\n\n// --- User Functions ---\nexport async function getNextSupervisorShortId(): Promise<string> {\n    const counterRef = doc(db, \"counters\", \"supervisorId\");\n    try {\n        const newCount = await runTransaction(db, async (transaction) => {\n            const counterDoc = await transaction.get(counterRef);\n            if (!counterDoc.exists()) {\n                transaction.set(counterRef, { count: 1 });\n                return 1;\n            }\n            const newCount = counterDoc.data().count + 1;\n            transaction.update(counterRef, { count: newCount });\n            return newCount;\n        });\n        return `sup${newCount}`;\n    } catch (e) {\n        console.error(\"Transaction failed: \", e);\n        throw e;\n    }\n}\n\nexport async function getAllUsers(): Promise<User[]> {\n    const usersCol = collection(db, 'users');\n    const userSnapshot = await getDocs(usersCol);\n    return userSnapshot.docs.map(doc => {\n        const data = doc.data();\n        if (data.trialExpiresAt && data.trialExpiresAt instanceof Timestamp) {\n            data.trialExpiresAt = data.trialExpiresAt.toDate().toISOString();\n        }\n        return { ...data, id: doc.id } as User;\n    });\n}\n\nexport async function getUserById(id: string): Promise<User | undefined> {\n    if (!id) return undefined;\n    const userDocRef = doc(db, 'users', id);\n    const userSnap = await getDoc(userDocRef);\n    if (!userSnap.exists()) return undefined;\n    const data = userSnap.data();\n    if (data.trialExpiresAt && data.trialExpiresAt instanceof Timestamp) {\n        data.trialExpiresAt = data.trialExpiresAt.toDate().toISOString();\n    }\n    return { ...data, id: userSnap.id } as User;\n}\n\nexport async function getUserByEmail(email: string): Promise<User | undefined> {\n    const q = query(collection(db, \"users\"), where(\"email\", \"==\", email));\n    const querySnapshot = await getDocs(q);\n    if (querySnapshot.empty) return undefined;\n    const userDoc = querySnapshot.docs[0];\n    const data = userDoc.data();\n    if (data.trialExpiresAt && data.trialExpiresAt instanceof Timestamp) {\n        data.trialExpiresAt = data.trialExpiresAt.toDate().toISOString();\n    }\n    return { ...data, id: userDoc.id } as User;\n}\n\nexport async function getUserByShortId(shortId: string): Promise<User | undefined> {\n    const q = query(collection(db, \"users\"), where(\"shortId\", \"==\", shortId));\n    const querySnapshot = await getDocs(q);\n    if (querySnapshot.empty) return undefined;\n    const userDoc = querySnapshot.docs[0];\n    const data = userDoc.data();\n     if (data.trialExpiresAt && data.trialExpiresAt instanceof Timestamp) {\n        data.trialExpiresAt = data.trialExpiresAt.toDate().toISOString();\n    }\n    return { ...data, id: userDoc.id } as User;\n}\n\nexport async function getStudentsBySupervisorId(supervisorId: string): Promise<User[]> {\n    const q = query(collection(db, \"users\"), where(\"supervisorId\", \"==\", supervisorId), where(\"role\", \"==\", \"student\"));\n    const querySnapshot = await getDocs(q);\n    return querySnapshot.docs.map(doc => ({ ...doc.data(), id: doc.id } as User));\n}\n\nexport async function addUserDB(user: User): Promise<void> {\n    const userDocRef = doc(db, 'users', user.id);\n    const userData: { [key: string]: any } = { ...user };\n\n    if (userData.trialExpiresAt && typeof userData.trialExpiresAt === 'string') {\n        userData.trialExpiresAt = Timestamp.fromDate(new Date(userData.trialExpiresAt));\n    } else if (!userData.trialExpiresAt) {\n        delete userData.trialExpiresAt;\n    }\n\n    await setDoc(userDocRef, userData);\n}\n\nexport async function updateUserDB(user: User): Promise<void> {\n    const userDocRef = doc(db, 'users', user.id);\n    const userData: { [key: string]: any } = { ...user };\n\n    if (userData.trialExpiresAt && typeof userData.trialExpiresAt === 'string') {\n        userData.trialExpiresAt = Timestamp.fromDate(new Date(userData.trialExpiresAt));\n    } else if (userData.trialExpiresAt === undefined) {\n         delete userData.trialExpiresAt;\n    }\n\n    await setDoc(userDocRef, userData, { merge: true });\n}\n\nexport async function deleteUserDB(id: string): Promise<void> {\n    await deleteDoc(doc(db, 'users', id));\n}\n\n// --- Word Functions ---\nexport async function getWordsBySupervisor(supervisorId: string): Promise<Word[]> {\n    const q = query(collection(db, \"words\"), where(\"supervisorId\", \"==\", supervisorId));\n    const querySnapshot = await getDocs(q);\n    return querySnapshot.docs.map(doc => ({ ...doc.data(), id: doc.id } as Word));\n}\n\nexport async function addWordDB(word: Word): Promise<void> {\n    const wordDocRef = doc(db, 'words', word.id);\n    await setDoc(wordDocRef, word);\n}\n\nexport async function getWordById(id: string): Promise<Word | undefined> {\n    const wordDocRef = doc(db, 'words', id);\n    const docSnap = await getDoc(wordDocRef);\n    return docSnap.exists() ? { ...docSnap.data(), id: docSnap.id } as Word : undefined;\n}\n\nexport async function updateWordDB(word: Word): Promise<void> {\n    const wordDocRef = doc(db, 'words', word.id);\n    await setDoc(wordDocRef, word, { merge: true });\n}\n\nexport async function deleteWordDB(id: string): Promise<void> {\n    await deleteDoc(doc(db, 'words', id));\n}\n\n// --- WordProgress Functions ---\nexport async function getStudentProgress(studentId: string): Promise<WordProgress[]> {\n    const progressCol = collection(db, `users/${studentId}/wordProgress`);\n    const progressSnapshot = await getDocs(progressCol);\n    return progressSnapshot.docs.map(doc => {\n        const data = doc.data();\n        return {\n            ...data,\n            id: doc.id,\n            nextReview: (data.nextReview as Timestamp).toDate(),\n        } as WordProgress;\n    });\n}\n\nexport async function saveStudentProgress(studentId: string, progress: WordProgress[]): Promise<void> {\n    const batch = writeBatch(db);\n    progress.forEach(p => {\n        const docRef = doc(db, `users/${studentId}/wordProgress`, p.id);\n        const progressData = {\n            ...p,\n            nextReview: Timestamp.fromDate(p.nextReview),\n        };\n        batch.set(docRef, progressData);\n    });\n    await batch.commit();\n}\n\n// --- Admin Message Functions ---\nexport async function getMessages(): Promise<Message[]> {\n    const messagesCol = collection(db, 'adminMessages');\n    const q = query(messagesCol, orderBy(\"createdAt\", \"desc\"));\n    const messageSnapshot = await getDocs(q);\n    return messageSnapshot.docs.map(doc => {\n        const data = doc.data();\n        return {\n            ...data,\n            id: doc.id,\n            createdAt: (data.createdAt as Timestamp).toDate(),\n        } as Message;\n    });\n}\n\nexport async function addMessageDB(message: Message): Promise<void> {\n    const messageData = { ...message, createdAt: Timestamp.fromDate(message.createdAt) };\n    const docRef = doc(db, \"adminMessages\", message.id);\n    await setDoc(docRef, messageData);\n}\n\nexport async function deleteMessageDB(id: string): Promise<void> {\n    await deleteDoc(doc(db, 'adminMessages', id));\n}\n\n// --- Chat Message Functions ---\nfunction getSupervisorChatCollectionId(studentId: string, supervisorId: string): string {\n    return `supervisor-chats/${studentId}-${supervisorId}/messages`;\n}\n\nfunction getPeerChatCollectionId(conversationId: string): string {\n    return `peer-chats/${conversationId}/messages`;\n}\n\nexport async function getSupervisorMessages(studentId: string, supervisorId: string): Promise<SupervisorMessage[]> {\n    const collId = getSupervisorChatCollectionId(studentId, supervisorId);\n    const q = query(collection(db, collId), orderBy(\"createdAt\", \"asc\"));\n    const snapshot = await getDocs(q);\n    return snapshot.docs.map(doc => {\n        const data = doc.data();\n        return {\n            ...data,\n            id: doc.id,\n            createdAt: (data.createdAt as Timestamp).toDate(),\n        } as SupervisorMessage;\n    });\n}\n\nexport async function getPeerMessages(conversationId: string): Promise<PeerMessage[]> {\n    const collId = getPeerChatCollectionId(conversationId);\n    const q = query(collection(db, collId), orderBy(\"createdAt\", \"asc\"));\n    const snapshot = await getDocs(q);\n    return snapshot.docs.map(doc => {\n        const data = doc.data();\n        return {\n            ...data,\n            id: doc.id,\n            createdAt: (data.createdAt as Timestamp).toDate(),\n        } as PeerMessage;\n    });\n}\n\nexport async function saveSupervisorMessage(message: SupervisorMessage): Promise<void> {\n    const collId = getSupervisorChatCollectionId(message.studentId, message.supervisorId);\n    const docRef = doc(db, collId, message.id);\n    const messageData = {\n        ...message,\n        createdAt: Timestamp.fromDate(message.createdAt)\n    };\n    await setDoc(docRef, messageData, { merge: true });\n}\n\nexport async function savePeerMessage(message: PeerMessage): Promise<void> {\n    const collId = getPeerChatCollectionId(message.conversationId);\n    const docRef = doc(db, collId, message.id);\n    const messageData = {\n        ...message,\n        createdAt: Timestamp.fromDate(message.createdAt)\n    };\n    await setDoc(docRef, messageData, { merge: true });\n}\n\nexport async function updateSupervisorMessages(studentId: string, supervisorId: string, messages: SupervisorMessage[]): Promise<void> {\n    const batch = writeBatch(db);\n    const collId = getSupervisorChatCollectionId(studentId, supervisorId);\n    messages.forEach(msg => {\n        const docRef = doc(db, collId, msg.id);\n        const messageData = { ...msg, createdAt: Timestamp.fromDate(msg.createdAt) };\n        batch.set(docRef, messageData, { merge: true });\n    });\n    await batch.commit();\n}\n\nexport async function updatePeerMessages(conversationId: string, messages: PeerMessage[]): Promise<void> {\n    const batch = writeBatch(db);\n    const collId = getPeerChatCollectionId(conversationId);\n    messages.forEach(msg => {\n        const docRef = doc(db, collId, msg.id);\n        const messageData = { ...msg, createdAt: Timestamp.fromDate(msg.createdAt) };\n        batch.set(docRef, messageData, { merge: true });\n    });\n    await batch.commit();\n}\n\nexport async function deleteSupervisorMessage(message: SupervisorMessage): Promise<void> {\n    const collId = getSupervisorChatCollectionId(message.studentId, message.supervisorId);\n    await deleteDoc(doc(db, collId, message.id));\n}\n\nexport async function deletePeerMessage(message: PeerMessage): Promise<void> {\n    const collId = getPeerChatCollectionId(message.conversationId);\n    await deleteDoc(doc(db, collId, message.id));\n}\n\nexport async function getConversations(userId: string): Promise<{ supervisor: Record<string, SupervisorMessage[]>, peer: Record<string, PeerMessage[]> }> {\n    const currentUser = await getUserById(userId);\n    if (!currentUser) return { supervisor: {}, peer: {} };\n\n    const supervisorConversations: Record<string, SupervisorMessage[]> = {};\n    const peerConversations: Record<string, PeerMessage[]> = {};\n    \n    if (currentUser.role === 'student') {\n        if (currentUser.supervisorId) {\n            const messages = await getSupervisorMessages(userId, currentUser.supervisorId);\n            supervisorConversations[currentUser.supervisorId] = messages\n                .filter(m => !(m.deletedFor?.includes(userId)));\n        }\n        if (currentUser.supervisorId) {\n            const allStudents = await getStudentsBySupervisorId(currentUser.supervisorId);\n            for (const student of allStudents) {\n                if (student.id === userId) continue;\n                const conversationId = [userId, student.id].sort().join('-');\n                const messages = await getPeerMessages(conversationId);\n                peerConversations[student.id] = messages\n                    .filter(m => !(m.deletedFor?.includes(userId)));\n            }\n        }\n    }\n\n    if (currentUser.role === 'supervisor') {\n        const students = await getStudentsBySupervisorId(userId);\n        for (const student of students) {\n            const messages = await getSupervisorMessages(student.id, userId);\n            supervisorConversations[student.id] = messages\n                .filter(m => !(m.deletedFor?.includes(userId)));\n        }\n    }\n\n    return { supervisor: supervisorConversations, peer: peerConversations };\n};\n\nexport async function markSupervisorMessagesAsRead(currentUserId: string, otherUserId: string) {\n    const currentUser = await getUserById(currentUserId);\n    if (!currentUser) return;\n    \n    let studentId: string, supervisorId: string;\n    if (currentUser.role === 'student') {\n        studentId = currentUserId;\n        supervisorId = otherUserId;\n    } else {\n        studentId = otherUserId;\n        supervisorId = currentUserId;\n    }\n\n    const messages = await getSupervisorMessages(studentId, supervisorId);\n    const messagesToUpdate = messages.map(m => (m.senderId !== currentUserId ? { ...m, read: true } : m));\n    if (messagesToUpdate.length > 0) {\n      await updateSupervisorMessages(studentId, supervisorId, messagesToUpdate);\n    }\n};\n\nexport async function markPeerMessagesAsRead(currentUserId: string, peerId: string) {\n    const conversationId = [currentUserId, peerId].sort().join('-');\n    const messages = await getPeerMessages(conversationId);\n    const messagesToUpdate = messages.map(m => m.senderId === peerId ? { ...m, read: true } : m);\n    if (messagesToUpdate.length > 0) {\n      await updatePeerMessages(conversationId, messagesToUpdate);\n    }\n};\n\n\n// --- Landing Page Hero Image ---\nexport async function setHeroImage(image: string): Promise<void> {\n    const docRef = doc(db, 'app-config', 'landingPage');\n    await setDoc(docRef, { heroImage: image });\n}\n\nexport async function getHeroImage(): Promise<string | undefined> {\n    const docRef = doc(db, 'app-config', 'landingPage');\n    const docSnap = await getDoc(docRef);\n    if (docSnap.exists()) {\n        return docSnap.data().heroImage;\n    }\n    return undefined;\n}\n\nconst isToday = (date: Date) => {\n    // This function doesn't account for timezone, it uses the browser's local timezone.\n    // For more accurate timezone handling, a library like date-fns-tz would be needed.\n    // However, for this app's purpose, this should be sufficient.\n    return dateFnsIsToday(date);\n}\n\n// --- Functions that were missing ---\nexport async function getWordsForStudent(studentId: string): Promise<(Word & WordProgress)[]> {\n    const student = await getUserById(studentId);\n    if (!student?.supervisorId) return [];\n\n    const supervisorWords = await getWordsBySupervisor(student.supervisorId);\n    const studentProgress = await getStudentProgress(studentId);\n    const studentProgressMap = new Map(studentProgress.map(p => [p.id, p]));\n\n    const mergedWords = supervisorWords.map(supervisorWord => {\n        const progress = studentProgressMap.get(supervisorWord.id);\n        if (progress) {\n            return {\n                ...supervisorWord,\n                ...progress,\n                nextReview: new Date(progress.nextReview),\n            };\n        } else {\n            // This is a new word for the student.\n            // Set its initial review date far in the future so it doesn't appear in \"Today's Reviews\".\n            // It will be properly scheduled when the user interacts with it on the \"Learn\" page.\n            return {\n                ...supervisorWord,\n                id: supervisorWord.id,\n                strength: 0,\n                nextReview: addYears(new Date(), 100), // Far future date\n                studentId: studentId\n            };\n        }\n    });\n\n    return mergedWords;\n}\n\n\nexport async function getWordForReview(\n    studentId: string, \n    unit?: string | null, \n    lesson?: string | null,\n    reviewType?: string | null\n): Promise<(Word & WordProgress) | null> {\n  let allWords = await getWordsForStudent(studentId);\n\n  let filteredWords = allWords;\n\n  // Filter by unit/lesson first if provided for general review sessions\n  if (unit) {\n      filteredWords = filteredWords.filter(word => word.unit === unit);\n  }\n  if (lesson) {\n      filteredWords = filteredWords.filter(word => word.lesson === lesson);\n  }\n  \n  let dueWords;\n  if (reviewType === 'today') {\n    // Filter for words scheduled for today\n    dueWords = filteredWords.filter(word => isToday(new Date(word.nextReview)) && word.strength >= 0);\n  } else {\n    // Default behavior for learn page: get words not yet mastered or learned\n    dueWords = filteredWords.filter(word => word.strength === 0);\n  }\n\n  if (dueWords.length === 0) return null;\n\n  // Sort by nextReview date to review the oldest due word first\n  dueWords.sort((a, b) => new Date(a.nextReview).getTime() - new Date(b.nextReview).getTime());\n\n  return dueWords[0];\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 765, "column": 0}, "map": {"version":3,"sources":["file:///home/user/leangualeap/src/components/ui/checkbox.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,uKAAA,CAAA,OAAsB;QACrB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kTACA;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,uKAAA,CAAA,YAA2B;YAC1B,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE;sBAEd,cAAA,6LAAC,uMAAA,CAAA,QAAK;gBAAC,WAAU;;;;;;;;;;;;;;;;;AAIvB,SAAS,WAAW,GAAG,uKAAA,CAAA,OAAsB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 817, "column": 0}, "map": {"version":3,"sources":["file:///home/user/leangualeap/src/components/login-form.tsx"],"sourcesContent":["\n\"use client\";\n\nimport Link from \"next/link\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Logo } from \"@/components/logo\";\nimport { useState } from \"react\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { Eye, EyeOff, Loader2 } from \"lucide-react\";\nimport { useLanguage } from \"@/hooks/use-language\";\nimport { z } from \"zod\";\nimport { useRouter } from \"next/navigation\";\nimport { type User } from \"@/lib/data\";\nimport { getUserById, updateUserDB, getNextSupervisorShortId, addUserDB } from \"@/lib/firestore\";\nimport { isPast } from \"date-fns\";\nimport { signInWithEmailAndPassword, createUserWithEmailAndPassword, setPersistence, browserLocalPersistence, browserSessionPersistence } from \"firebase/auth\";\nimport { auth } from \"@/lib/firebase\";\nimport { Checkbox } from \"@/components/ui/checkbox\";\n\nconst loginSchema = z.object({\n  email: z.string().email(\"Invalid email address.\"),\n  password: z.string().min(1, \"Password is required.\"),\n  rememberMe: z.boolean().optional(),\n});\n\n\nexport function LoginForm() {\n    const { toast } = useToast();\n    const { t } = useLanguage();\n    const router = useRouter();\n    const [showPassword, setShowPassword] = useState(false);\n    const [isPending, setIsPending] = useState(false);\n    const mainAdminEmail = \"warriorwithinyousif@gmail.com\";\n    const defaultPassword = \"password123\";\n\n    const handleLogin = async (userId: string) => {\n        let user = await getUserById(userId);\n        if (!user) {\n             toast({ title: t('toasts.error'), description: \"No user data found in database.\", variant: \"destructive\"});\n             setIsPending(false);\n             return;\n        }\n        \n        if (user.role === 'supervisor' && user.trialExpiresAt && isPast(new Date(user.trialExpiresAt))) {\n            if (!user.isSuspended) {\n                user.isSuspended = true;\n                await updateUserDB(user);\n                toast({\n                    title: \"Trial Expired\",\n                    description: \"Your trial period has ended. Please contact an administrator.\",\n                    variant: \"destructive\"\n                });\n                setIsPending(false);\n                return;\n            }\n        }\n\n        if (user.isSuspended) {\n            toast({ title: t('toasts.error'), description: \"This account has been suspended.\", variant: \"destructive\"});\n            setIsPending(false);\n            return;\n        }\n        \n        router.push(`/dashboard?userId=${user.id}`);\n    }\n\n    const handleSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n        setIsPending(true);\n\n        const formData = new FormData(event.currentTarget);\n        const validatedFields = loginSchema.safeParse({\n            email: formData.get(\"email\"),\n            password: formData.get(\"password\"),\n            rememberMe: formData.get(\"remember-me\") === \"on\",\n        });\n\n        if (!validatedFields.success) {\n            const firstError = Object.values(validatedFields.error.flatten().fieldErrors)[0]?.[0];\n            toast({\n                title: t('toasts.error'),\n                description: firstError || \"Validation failed.\",\n                variant: \"destructive\"\n            });\n            setIsPending(false);\n            return;\n        }\n\n        const { email, password, rememberMe } = validatedFields.data;\n        \n        try {\n            await setPersistence(auth, rememberMe ? browserLocalPersistence : browserSessionPersistence);\n            \n            const userCredential = await signInWithEmailAndPassword(auth, email, password);\n            await handleLogin(userCredential.user.uid);\n\n        } catch (error: any) {\n            // Case 1: User does not exist, but matches main admin credentials.\n            if ((error.code === 'auth/user-not-found' || error.code === 'auth/invalid-credential') && email === mainAdminEmail && password === defaultPassword) {\n                try {\n                    const newUserCredential = await createUserWithEmailAndPassword(auth, email, password);\n                    const shortId = await getNextSupervisorShortId();\n                    const mainAdminData: User = {\n                        id: newUserCredential.user.uid,\n                        name: \"Yousif\",\n                        email: mainAdminEmail,\n                        role: \"supervisor\",\n                        avatar: \"https://placehold.co/100x100.png?text=Y\",\n                        timezone: \"Asia/Baghdad\",\n                        isMainAdmin: true,\n                        isSuspended: false,\n                        shortId: shortId,\n                    };\n                    await addUserDB(mainAdminData);\n                    await handleLogin(newUserCredential.user.uid);\n                } catch (creationError: any) {\n                    toast({ title: \"Admin Creation Error\", description: `Failed to auto-create admin account: ${creationError.message}`, variant: \"destructive\" });\n                    setIsPending(false);\n                }\n            } else {\n                // Case 2: Any other login error (wrong password, user disabled, etc.)\n                console.error(\"Firebase Auth Error: \", error);\n                let errorMessage = \"An unexpected error occurred. Please try again.\";\n                if (error.code === 'auth/user-not-found' || error.code === 'auth/wrong-password' || error.code === 'auth/invalid-credential') {\n                    errorMessage = \"Invalid email or password. Please check your credentials or sign up if you don't have an account.\";\n                } else if (error.code === 'auth/too-many-requests') {\n                    errorMessage = \"Access to this account has been temporarily disabled due to many failed login attempts. You can immediately restore it by resetting your password or you can try again later.\"\n                }\n                toast({ title: t('toasts.error'), description: errorMessage, variant: \"destructive\" });\n                setIsPending(false);\n            }\n        }\n    }\n\n\n  return (\n    <Card className=\"mx-auto max-w-sm w-full\">\n      <CardHeader className=\"text-center\">\n        <div className=\"flex justify-center mb-4\">\n            <Logo className=\"h-20 w-20\" />\n        </div>\n        <CardTitle className=\"text-2xl font-headline\">{t('login.welcome')}</CardTitle>\n        <CardDescription>\n          {t('login.description')}\n        </CardDescription>\n      </CardHeader>\n      <CardContent>\n        <form onSubmit={handleSubmit} className=\"grid gap-4\">\n          <div className=\"grid gap-2\">\n            <Label htmlFor=\"email\">{t('login.emailLabel')}</Label>\n            <Input\n              id=\"email\"\n              type=\"email\"\n              name=\"email\"\n              placeholder=\"m@example.com\"\n              required\n            />\n          </div>\n          <div className=\"grid gap-2\">\n            <div className=\"flex items-center\">\n              <Label htmlFor=\"password\">{t('login.passwordLabel')}</Label>\n            </div>\n            <div className=\"relative\">\n              <Input \n                id=\"password\" \n                name=\"password\" \n                type={showPassword ? \"text\" : \"password\"} \n                required \n              />\n              <button\n                type=\"button\"\n                onClick={() => setShowPassword(!showPassword)}\n                className=\"absolute inset-y-0 right-0 flex items-center px-3 text-muted-foreground hover:text-foreground\"\n                aria-label={showPassword ? \"Hide password\" : \"Show password\"}\n              >\n                {showPassword ? <EyeOff className=\"h-4 w-4\" /> : <Eye className=\"h-4 w-4\" />}\n              </button>\n            </div>\n          </div>\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center space-x-2\">\n                <Checkbox id=\"remember-me\" name=\"remember-me\" />\n                <Label htmlFor=\"remember-me\" className=\"text-sm font-medium leading-none\">Remember me</Label>\n            </div>\n            <Link\n                href=\"#\"\n                className=\"ms-auto inline-block text-sm underline\"\n              >\n                {t('login.forgotPassword')}\n            </Link>\n          </div>\n           <Button type=\"submit\" disabled={isPending} className=\"w-full\">\n            {isPending ? (\n                <>\n                <Loader2 className=\"me-2 h-4 w-4 animate-spin\" />\n                {t('login.loginButton')}...\n                </>\n            ) : (\n                t('login.loginButton')\n            )}\n            </Button>\n        </form>\n        <div className=\"mt-4 text-center text-sm\">\n          {t('login.noAccount')}{\" \"}\n          <Link href=\"/register\" className=\"underline\">\n            {t('login.signUp')}\n          </Link>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}