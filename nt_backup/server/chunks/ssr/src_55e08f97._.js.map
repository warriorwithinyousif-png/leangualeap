{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/leangualeap/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 88, "column": 0}, "map": {"version":3,"sources":["file:///home/user/leangualeap/src/components/ui/table.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n"],"names":[],"mappings":";;;;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YACC,KAAK;YACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;AAIf,MAAM,WAAW,GAAG;AAEpB,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAM,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,mBAAmB;QAAa,GAAG,KAAK;;;;;;AAEzE,YAAY,WAAW,GAAG;AAE1B,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,2DACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG;AAE1B,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,+EACA;QAED,GAAG,KAAK;;;;;;AAGb,SAAS,WAAW,GAAG;AAEvB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,oGACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,kDAAkD;QAC/D,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,6BAAe,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 198, "column": 0}, "map": {"version":3,"sources":["file:///home/user/leangualeap/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,8OAAC;QAAI,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE","debugId":null}},
    {"offset": {"line": 240, "column": 0}, "map": {"version":3,"sources":["file:///home/user/leangualeap/src/components/ui/checkbox.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,oKAAA,CAAA,OAAsB;QACrB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,kTACA;QAED,GAAG,KAAK;kBAET,cAAA,8OAAC,oKAAA,CAAA,YAA2B;YAC1B,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE;sBAEd,cAAA,8OAAC,oMAAA,CAAA,QAAK;gBAAC,WAAU;;;;;;;;;;;;;;;;AAIvB,SAAS,WAAW,GAAG,oKAAA,CAAA,OAAsB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 285, "column": 0}, "map": {"version":3,"sources":["file:///home/user/leangualeap/src/components/ui/select.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 477, "column": 0}, "map": {"version":3,"sources":["file:///home/user/leangualeap/src/components/ui/alert.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n"],"names":[],"mappings":";;;;;;AAAA;AACA;AAEA;;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,6JACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG3B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAO,EAAE,oBACnC,8OAAC;QACC,KAAK;QACL,MAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG;AAEpB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,gDAAgD;QAC7D,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,iCAAmB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,iBAAiB,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 541, "column": 0}, "map": {"version":3,"sources":["file:///home/user/leangualeap/src/lib/storage.ts"],"sourcesContent":["\n'use client';\n\nimport { saveStudentProgress } from './firestore';\n\n// This interface represents only the data that changes per student.\nexport interface WordProgress {\n  id: string; // This will be the word ID\n  studentId: string;\n  strength: number;\n  nextReview: Date;\n}\n\n/**\n * Saves a student's progress for a single word to Firestore.\n * @param studentId The ID of the student.\n * @param wordId The ID of the word.\n * @param newProgress An object containing the new strength and nextReview date.\n */\nexport const updateStudentProgressInStorage = async (studentId: string, wordId: string, newProgress: { strength: number, nextReview: Date }) => {\n  if (!studentId || !wordId) return;\n\n  const progressRecord: WordProgress = {\n    id: wordId,\n    studentId: studentId,\n    strength: newProgress.strength,\n    nextReview: newProgress.nextReview,\n  };\n\n  try {\n    // Save the single progress record to Firestore.\n    // The db function handles putting this in a subcollection for the user.\n    await saveStudentProgress(studentId, [progressRecord]);\n  } catch (e) {\n    console.error(\"Failed to update student progress in Firestore\", e);\n  }\n};\n"],"names":[],"mappings":";;;AAGA;AAFA;;AAkBO,MAAM,iCAAiC,OAAO,WAAmB,QAAgB;IACtF,IAAI,CAAC,aAAa,CAAC,QAAQ;IAE3B,MAAM,iBAA+B;QACnC,IAAI;QACJ,WAAW;QACX,UAAU,YAAY,QAAQ;QAC9B,YAAY,YAAY,UAAU;IACpC;IAEA,IAAI;QACF,gDAAgD;QAChD,wEAAwE;QACxE,MAAM,CAAA,GAAA,uHAAA,CAAA,sBAAmB,AAAD,EAAE,WAAW;YAAC;SAAe;IACvD,EAAE,OAAO,GAAG;QACV,QAAQ,KAAK,CAAC,kDAAkD;IAClE;AACF","debugId":null}},
    {"offset": {"line": 571, "column": 0}, "map": {"version":3,"sources":["file:///home/user/leangualeap/src/components/xp-toast.tsx"],"sourcesContent":["\n\"use client\";\n\nimport { Star, Calendar, BookOpen, BrainCircuit, Trophy } from \"lucide-react\";\nimport { useLanguage } from \"@/hooks/use-language\";\n\ntype XpEvent = \n  | 'review_word'\n  | 'spell_correct'\n  | 'daily_login'\n  | 'master_word'\n  | 'grammar_test';\n\nconst eventIcons: Record<XpEvent, React.ReactNode> = {\n    review_word: <BookOpen className=\"h-5 w-5 text-green-500\" />,\n    spell_correct: <BrainCircuit className=\"h-5 w-5 text-green-500\" />,\n    daily_login: <Calendar className=\"h-5 w-5 text-green-500\" />,\n    master_word: <Trophy className=\"h-5 w-5 text-yellow-500\" />,\n    grammar_test: <Trophy className=\"h-5 w-5 text-yellow-500\" />\n};\n\ninterface XpToastProps {\n    event: XpEvent;\n    amount: number;\n}\n\nexport function XpToast({ event, amount }: XpToastProps) {\n    const { t } = useLanguage();\n    const message = t(`xpEvents.${event}`);\n    const icon = eventIcons[event];\n    \n    return (\n        <div className=\"flex items-center gap-4\">\n            {icon}\n            <div className=\"flex flex-col\">\n                <span className=\"font-semibold\">{message}</span>\n                <span className=\"flex items-center gap-1 text-sm text-yellow-500 font-bold\">\n                    +{amount} XP\n                    <Star className=\"h-4 w-4 fill-current\" />\n                </span>\n            </div>\n        </div>\n    );\n}\n\n    "],"names":[],"mappings":";;;;AAGA;AAAA;AAAA;AAAA;AAAA;AACA;AAHA;;;;AAYA,MAAM,aAA+C;IACjD,2BAAa,8OAAC,8MAAA,CAAA,WAAQ;QAAC,WAAU;;;;;;IACjC,6BAAe,8OAAC,sNAAA,CAAA,eAAY;QAAC,WAAU;;;;;;IACvC,2BAAa,8OAAC,0MAAA,CAAA,WAAQ;QAAC,WAAU;;;;;;IACjC,2BAAa,8OAAC,sMAAA,CAAA,SAAM;QAAC,WAAU;;;;;;IAC/B,4BAAc,8OAAC,sMAAA,CAAA,SAAM;QAAC,WAAU;;;;;;AACpC;AAOO,SAAS,QAAQ,EAAE,KAAK,EAAE,MAAM,EAAgB;IACnD,MAAM,EAAE,CAAC,EAAE,GAAG,CAAA,GAAA,gIAAA,CAAA,cAAW,AAAD;IACxB,MAAM,UAAU,EAAE,CAAC,SAAS,EAAE,OAAO;IACrC,MAAM,OAAO,UAAU,CAAC,MAAM;IAE9B,qBACI,8OAAC;QAAI,WAAU;;YACV;0BACD,8OAAC;gBAAI,WAAU;;kCACX,8OAAC;wBAAK,WAAU;kCAAiB;;;;;;kCACjC,8OAAC;wBAAK,WAAU;;4BAA4D;4BACtE;4BAAO;0CACT,8OAAC,kMAAA,CAAA,OAAI;gCAAC,WAAU;;;;;;;;;;;;;;;;;;;;;;;;AAKpC","debugId":null}},
    {"offset": {"line": 679, "column": 0}, "map": {"version":3,"sources":["file:///home/user/leangualeap/src/lib/stats.tsx"],"sourcesContent":["\n\n'use client';\n\nimport { getWeek, startOfWeek } from 'date-fns';\nimport { XpToast } from '@/components/xp-toast';\nimport { doc, getDoc, setDoc, getDocs, collection } from 'firebase/firestore';\nimport { db } from './firebase';\nimport type { User } from './data';\n\n// Represents the results for a single student from the previous week.\nexport type LastWeekWinner = {\n  id: string;\n  name: string;\n  avatar: string;\n  xp: number;\n  rank: number;\n};\n\nexport type LearningStats = {\n  timeSpentSeconds: number;\n  totalWordsReviewed: number;\n  xp: number;\n  reviewedToday: {\n    count: number;\n    date: string;\n    timeSpentSeconds: number;\n    completedTests: string[];\n  };\n  activityLog: string[];\n  spellingPractice: {\n    count: number;\n    date: string;\n  };\n  lastLoginDate: string;\n  weekStartDate?: string; // ISO date string for start of the week\n  // New fields for weekly results\n  lastWeek?: {\n    weekId: string; // e.g., \"2024-28\"\n    winners: LastWeekWinner[];\n  } | null;\n  hasSeenLastWeekResults?: boolean;\n};\n\nexport type XpEvent =\n  | 'review_word'\n  | 'spell_correct'\n  | 'daily_login'\n  | 'master_word'\n  | 'grammar_test';\n\nexport const XP_AMOUNTS: Record<XpEvent, number> = {\n    review_word: 5,\n    spell_correct: 5,\n    daily_login: 20,\n    master_word: 10,\n    grammar_test: 20\n};\n\nexport const getInitialStats = (today: string): LearningStats => ({\n    timeSpentSeconds: 0,\n    totalWordsReviewed: 0,\n    xp: 0,\n    reviewedToday: { count: 0, date: today, timeSpentSeconds: 0, completedTests: [] },\n    activityLog: [],\n    spellingPractice: { count: 0, date: today },\n    lastLoginDate: '1970-01-01',\n    weekStartDate: startOfWeek(new Date(), { weekStartsOn: 1 }).toISOString(), // Monday\n    lastWeek: null,\n    hasSeenLastWeekResults: true,\n});\n\nasync function getStudentsAndStatsBySupervisor(supervisorId: string): Promise<{user: User, stats: LearningStats}[]> {\n    const studentQuery = query(collection(db, \"users\"), where(\"supervisorId\", \"==\", supervisorId));\n    const studentSnapshot = await getDocs(studentQuery);\n    \n    const studentsWithStats = await Promise.all(studentSnapshot.docs.map(async (doc) => {\n        const user = { ...doc.data(), id: doc.id } as User;\n        const stats = await getStatsForUser(user.id);\n        return { user, stats };\n    }));\n    \n    return studentsWithStats;\n}\n\nexport const getStatsForUser = async (userId: string): Promise<LearningStats> => {\n    const today = new Date();\n    const todayStr = today.toLocaleDateString('en-CA');\n    const startOfThisWeek = startOfWeek(today, { weekStartsOn: 1 });\n    const thisWeekId = `${today.getFullYear()}-${getWeek(today, { weekStartsOn: 1 })}`;\n\n    const statsDocRef = doc(db, `users/${userId}/app-data/stats`);\n    const statsSnap = await getDoc(statsDocRef);\n\n    let stats: LearningStats;\n    let currentUser: User | undefined;\n\n    if (statsSnap.exists()) {\n        stats = statsSnap.data() as LearningStats;\n    } else {\n        stats = getInitialStats(todayStr);\n        await setDoc(statsDocRef, stats);\n    }\n\n    // --- Data Migration & Defaults ---\n    if (typeof stats.xp !== 'number') stats.xp = 0;\n    if (!stats.lastLoginDate) stats.lastLoginDate = '1970-01-01';\n    if (!stats.weekStartDate) stats.weekStartDate = startOfThisWeek.toISOString();\n    if (typeof stats.hasSeenLastWeekResults !== 'boolean') stats.hasSeenLastWeekResults = true;\n\n    // --- Weekly Rollover Logic ---\n    const lastWeekStartDate = new Date(stats.weekStartDate);\n    const lastWeekId = `${lastWeekStartDate.getFullYear()}-${getWeek(lastWeekStartDate, { weekStartsOn: 1 })}`;\n    \n    if (thisWeekId !== lastWeekId && !stats.lastWeek?.weekId?.endsWith(lastWeekId)) {\n        currentUser = await getUserById(userId);\n        if (currentUser?.supervisorId) {\n            const classmates = await getStudentsAndStatsBySupervisor(currentUser.supervisorId);\n            const leaderboard = classmates\n                .map(({ user, stats }) => ({ ...user, xp: stats.xp }))\n                .sort((a, b) => b.xp - a.xp);\n\n            const winners = leaderboard.slice(0, 3).map((player, index) => ({\n                id: player.id,\n                name: player.name,\n                avatar: player.avatar,\n                xp: player.xp,\n                rank: index + 1,\n            }));\n\n            // Update stats for all students in the class\n            for (const { user: student } of classmates) {\n                const studentStatsRef = doc(db, `users/${student.id}/app-data/stats`);\n                await setDoc(studentStatsRef, {\n                    xp: 0,\n                    weekStartDate: startOfThisWeek.toISOString(),\n                    lastWeek: { weekId: lastWeekId, winners },\n                    hasSeenLastWeekResults: false\n                }, { merge: true });\n            }\n            \n            // Reload stats for the current user after update\n            const updatedStatsSnap = await getDoc(statsDocRef);\n            if(updatedStatsSnap.exists()) {\n                 stats = updatedStatsSnap.data() as LearningStats;\n            }\n        }\n    }\n\n\n    // --- Daily Data Reset Logic ---\n    if (!stats.reviewedToday || stats.reviewedToday.date !== todayStr) {\n        stats.reviewedToday = { count: 0, date: todayStr, timeSpentSeconds: 0, completedTests: [] };\n    }\n    if (!stats.spellingPractice || stats.spellingPractice.date !== todayStr) {\n        stats.spellingPractice = { count: 0, date: todayStr };\n    }\n    if (!Array.isArray(stats.activityLog)) stats.activityLog = [];\n    if (!Array.isArray(stats.reviewedToday.completedTests)) stats.reviewedToday.completedTests = [];\n    if (typeof stats.reviewedToday.timeSpentSeconds !== 'number') stats.reviewedToday.timeSpentSeconds = 0;\n\n    return stats;\n}\n\nexport const updateXp = async (userId: string, event: XpEvent) => {\n    if (!userId) return { updated: false, amount: 0 };\n\n    const stats = await getStatsForUser(userId);\n    const amount = XP_AMOUNTS[event];\n    const today = new Date().toLocaleDateString('en-CA');\n\n    if (event === 'daily_login') {\n        if (stats.lastLoginDate === today) {\n            return { updated: false, amount: 0 }; // Already awarded today\n        }\n        stats.lastLoginDate = today;\n    }\n\n    stats.xp += amount;\n\n    const statsDocRef = doc(db, `users/${userId}/app-data/stats`);\n    await setDoc(statsDocRef, stats, { merge: true });\n\n    return { updated: true, amount };\n};\n\n\ntype UpdateStatsParams = {\n  userId: string;\n  reviewedCount?: number;\n  durationSeconds?: number;\n  testName?: string;\n  spelledCount?: number;\n  toast?: (props: any) => void;\n  markAsSeen?: boolean;\n};\n\nexport const updateLearningStats = async ({\n  userId,\n  reviewedCount = 0,\n  durationSeconds = 0,\n  testName,\n  spelledCount = 0,\n  toast,\n  markAsSeen = false,\n}: UpdateStatsParams) => {\n  if (!userId) return;\n\n  const stats = await getStatsForUser(userId);\n  const today = new Date().toLocaleDateString('en-CA');\n\n  // Update stats\n  stats.totalWordsReviewed += reviewedCount;\n  stats.timeSpentSeconds += durationSeconds;\n  stats.reviewedToday.count += reviewedCount;\n  stats.reviewedToday.timeSpentSeconds += durationSeconds;\n  stats.spellingPractice.count += spelledCount;\n\n  // Log activity\n  if (!stats.activityLog.includes(today)) {\n    stats.activityLog.push(today);\n  }\n\n  // Log completed test and award XP\n  if (testName && !stats.reviewedToday.completedTests.includes(testName)) {\n      stats.reviewedToday.completedTests.push(testName);\n      stats.xp += XP_AMOUNTS.grammar_test;\n      if (toast) {\n           toast({\n              description: <XpToast event=\"grammar_test\" amount={XP_AMOUNTS.grammar_test} />,\n              duration: 3000,\n          });\n      }\n  }\n\n  if (markAsSeen) {\n      stats.hasSeenLastWeekResults = true;\n  }\n\n  const statsDocRef = doc(db, `users/${userId}/app-data/stats`);\n  await setDoc(statsDocRef, stats, { merge: true });\n};\n\n\n// Helper function needed for stats rollover\nasync function getUserById(id: string): Promise<User | undefined> {\n    if (!id) return undefined;\n    const userDocRef = doc(db, 'users', id);\n    const userSnap = await getDoc(userDocRef);\n    if (!userSnap.exists()) return undefined;\n    const data = userSnap.data();\n    if (data.trialExpiresAt && data.trialExpiresAt instanceof Timestamp) {\n        data.trialExpiresAt = data.trialExpiresAt.toDate().toISOString();\n    }\n    return { ...data, id: userSnap.id } as User;\n}\n\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 918, "column": 0}, "map": {"version":3,"sources":["file:///home/user/leangualeap/src/components/spelling-practice-card.tsx"],"sourcesContent":["\n\n\"use client\";\n\nimport { useEffect, useState, useMemo, useCallback } from \"react\";\nimport { type Word } from \"@/lib/data\";\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from \"./ui/card\";\nimport { Button } from \"./ui/button\";\nimport { Input } from \"./ui/input\";\nimport Image from \"next/image\";\nimport { RefreshCw, CheckCircle, XCircle } from \"lucide-react\";\nimport { cn } from \"@/lib/utils\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { updateStudentProgressInStorage } from \"@/lib/storage\";\nimport { type WordProgress } from \"@/lib/storage\";\nimport { updateLearningStats, updateXp, XP_AMOUNTS, getStatsForUser } from \"@/lib/stats.tsx\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"./ui/select\";\nimport { XpToast } from \"./xp-toast\";\nimport { useLanguage } from \"@/hooks/use-language\";\n\n\ninterface SpellingPracticeCardProps {\n  allWords: (Word & Partial<WordProgress>)[];\n  userId: string;\n}\n\ntype FeedbackState = \"idle\" | \"correct\" | \"incorrect\" | \"processing\";\n\nexport function SpellingPracticeCard({ allWords, userId }: SpellingPracticeCardProps) {\n  const [practiceWords, setPracticeWords] = useState<(Word & Partial<WordProgress>)[]>([]);\n  const [currentWord, setCurrentWord] = useState<(Word & Partial<WordProgress>) | null>(null);\n  const [answer, setAnswer] = useState(\"\");\n  const [feedback, setFeedback] = useState<FeedbackState>(\"idle\");\n  const { toast } = useToast();\n  const { t, translateContent } = useLanguage();\n  \n  const [selectedUnit, setSelectedUnit] = useState<string | null>(null);\n  const [selectedLesson, setSelectedLesson] = useState<string | null>(null);\n  const [spelledToday, setSpelledToday] = useState(0);\n\n  const DAILY_LIMIT = 10;\n\n  useEffect(() => {\n    const loadStats = async () => {\n        const stats = await getStatsForUser(userId);\n        const today = new Date().toISOString().split('T')[0];\n\n        if (stats.spellingPractice?.date === today) {\n            setSpelledToday(stats.spellingPractice.count);\n        } else {\n            setSpelledToday(0);\n        }\n    }\n    loadStats();\n\n    const words = allWords.filter((w) => w.strength && w.strength > 0);\n    setPracticeWords(words);\n  }, [allWords, userId]);\n\n  const uniqueUnits = useMemo(() => {\n    return Array.from(new Set(practiceWords.map((word) => word.unit).filter(Boolean)));\n  }, [practiceWords]);\n\n  const lessonsForSelectedUnit = useMemo(() => {\n    if (!selectedUnit) return [];\n    return Array.from(new Set(\n      practiceWords\n        .filter((word) => word.unit === selectedUnit)\n        .map((word) => word.lesson)\n        .filter(Boolean)\n    ));\n  }, [practiceWords, selectedUnit]);\n\n  const filteredPracticeWords = useMemo(() => {\n    return practiceWords.filter(word => {\n        const unitMatch = !selectedUnit || word.unit === selectedUnit;\n        const lessonMatch = !selectedLesson || word.lesson === selectedLesson;\n        return unitMatch && lessonMatch;\n    });\n  }, [practiceWords, selectedUnit, selectedLesson]);\n\n  const selectNewWord = useCallback(() => {\n    if (spelledToday >= DAILY_LIMIT) {\n        setCurrentWord(null);\n        return;\n    }\n    if (filteredPracticeWords.length === 0) {\n      setCurrentWord(null);\n      return;\n    }\n    const randomIndex = Math.floor(Math.random() * filteredPracticeWords.length);\n    setCurrentWord(filteredPracticeWords[randomIndex]);\n    setAnswer(\"\");\n    setFeedback(\"idle\");\n  }, [filteredPracticeWords, spelledToday]);\n\n  useEffect(() => {\n    selectNewWord();\n  }, [selectNewWord]);\n\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    if (!currentWord || !answer.trim() || feedback !== 'idle' || spelledToday >= DAILY_LIMIT) return;\n\n    setFeedback('processing'); // Disable button immediately\n    const correct = answer.trim().toLowerCase() === currentWord.word.toLowerCase();\n    \n    await updateLearningStats({ userId, spelledCount: 1 });\n    setSpelledToday(prev => prev + 1);\n\n    if (correct) {\n      setFeedback(\"correct\");\n      const newStrength = (currentWord.strength || 0) + 1;\n      const nextReview = currentWord.nextReview ? new Date(currentWord.nextReview) : new Date();\n      if(currentWord.id && userId) {\n        updateStudentProgressInStorage(userId, currentWord.id, {\n            strength: newStrength,\n            nextReview: nextReview,\n        });\n      }\n      \n      const { amount } = await updateXp(userId, 'spell_correct');\n      toast({\n        description: <XpToast event=\"spell_correct\" amount={amount} />,\n        duration: 3000,\n      });\n      \n      setTimeout(selectNewWord, 1500);\n    } else {\n      setFeedback(\"incorrect\");\n       const newStrength = Math.max(0, (currentWord.strength || 1) - 1);\n       const nextReview = currentWord.nextReview ? new Date(currentWord.nextReview) : new Date();\n       if(currentWord.id && userId) {\n        updateStudentProgressInStorage(userId, currentWord.id, {\n            strength: newStrength,\n            nextReview: nextReview,\n        });\n       }\n       toast({\n        title: \"Incorrect\",\n        description: `The correct spelling is \"${currentWord.word}\". We'll keep practicing.`,\n        variant: \"destructive\"\n       });\n       setTimeout(() => {\n         setAnswer(currentWord.word);\n         setTimeout(selectNewWord, 2000);\n       }, 1000);\n    }\n  };\n\n  const getInputColor = () => {\n    if (feedback === \"correct\") return \"border-green-500 focus-visible:ring-green-500\";\n    if (feedback === \"incorrect\") return \"border-destructive focus-visible:ring-destructive\";\n    return \"\";\n  };\n\n  const clearFilters = () => {\n      setSelectedUnit(null);\n      setSelectedLesson(null);\n  }\n\n  const handleUnitChange = (unit: string) => {\n      setSelectedUnit(unit === \"all\" ? null : unit);\n      setSelectedLesson(null);\n  }\n\n  const handleLessonChange = (lesson: string) => {\n      setSelectedLesson(lesson === \"all\" ? null : lesson);\n  }\n\n\n  if (practiceWords.length === 0) {\n    return (\n        <Card>\n            <CardHeader>\n                <CardTitle>{t('spellingPractice.title')}</CardTitle>\n                <CardDescription>{t('spellingPractice.description')}</CardDescription>\n            </CardHeader>\n            <CardContent>\n                 <div className=\"text-center text-muted-foreground py-8\">\n                    <p>{t('spellingPractice.noWordsYet')}</p>\n                    <p>{t('spellingPractice.noWordsYetHint')}</p>\n                </div>\n            </CardContent>\n        </Card>\n    );\n  }\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle className=\"flex items-center justify-between\">\n          <span>{t('spellingPractice.title')}</span>\n           <div className=\"flex items-center gap-2\">\n            <span className=\"text-sm font-normal text-muted-foreground\">\n              {t('spellingPractice.todayCounter', spelledToday, DAILY_LIMIT)}\n            </span>\n            <Button variant=\"ghost\" size=\"icon\" onClick={selectNewWord} disabled={spelledToday >= DAILY_LIMIT}>\n              <RefreshCw className=\"h-4 w-4\" />\n              <span className=\"sr-only\">{t('spellingPractice.newWord')}</span>\n            </Button>\n          </div>\n        </CardTitle>\n        <CardDescription>\n          {t('spellingPractice.description')}\n        </CardDescription>\n        <div className=\"flex items-center space-x-2 pt-4\">\n            <Select onValueChange={handleUnitChange} value={selectedUnit || \"all\"}>\n              <SelectTrigger className=\"w-[180px]\">\n                <SelectValue placeholder={t('spellingPractice.filterByUnit')} />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"all\">{t('spellingPractice.allUnits')}</SelectItem>\n                {uniqueUnits.map((unit) => (\n                  <SelectItem key={unit} value={unit}>\n                    {translateContent(unit)}\n                  </SelectItem>\n                ))}\n              </SelectContent>\n            </Select>\n            <Select onValueChange={handleLessonChange} value={selectedLesson || \"all\"} disabled={!selectedUnit}>\n              <SelectTrigger className=\"w-[180px]\">\n                <SelectValue placeholder={t('spellingPractice.filterByLesson')} />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"all\">{t('spellingPractice.allLessons')}</SelectItem>\n                {lessonsForSelectedUnit.map((lesson) => (\n                  <SelectItem key={lesson} value={lesson}>\n                    {translateContent(lesson)}\n                  </SelectItem>\n                ))}\n              </SelectContent>\n            </Select>\n             {(selectedUnit || selectedLesson) && <Button variant=\"ghost\" onClick={clearFilters}>{t('spellingPractice.clearFilters')}</Button>}\n          </div>\n      </CardHeader>\n      <CardContent className=\"space-y-4\">\n        {spelledToday >= DAILY_LIMIT ? (\n            <div className=\"text-center text-muted-foreground py-8\">\n                <p>{t('spellingPractice.limitReached')}</p>\n                <p>{t('spellingPractice.comeBack')}</p>\n            </div>\n        ) : currentWord ? (\n          <>\n            <div className=\"flex flex-col md:flex-row items-center gap-4 p-4 bg-secondary rounded-lg\">\n              <Image\n                src={currentWord.imageUrl}\n                alt={currentWord.word}\n                width={100}\n                height={100}\n                className=\"rounded-md object-cover\"\n              />\n              <p className=\"text-center md:text-left flex-1\">{currentWord.definition}</p>\n            </div>\n            <form onSubmit={handleSubmit} className=\"flex items-center gap-2\">\n              <div className=\"relative w-full\">\n                <Input\n                  type=\"text\"\n                  placeholder={t('spellingPractice.placeholder')}\n                  value={answer}\n                  onChange={(e) => setAnswer(e.target.value)}\n                  className={cn(\"pr-8\", getInputColor())}\n                  readOnly={feedback !== 'idle'}\n                />\n                {feedback === \"correct\" && <CheckCircle className=\"absolute right-2 top-1/2 -translate-y-1/2 h-5 w-5 text-green-500\"/>}\n                {feedback === \"incorrect\" && <XCircle className=\"absolute right-2 top-1/2 -translate-y-1/2 h-5 w-5 text-destructive\"/>}\n              </div>\n              <Button type=\"submit\" disabled={feedback !== 'idle'}>{t('spellingPractice.check')}</Button>\n            </form>\n          </>\n        ) : (\n          <div className=\"text-center text-muted-foreground py-8\">\n            <p>{filteredPracticeWords.length > 0 ? t('spellingPractice.loading') : t('spellingPractice.noWordsForFilters')}</p>\n          </div>\n        )}\n      </CardContent>\n    </Card>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1489, "column": 0}, "map": {"version":3,"sources":["file:///home/user/leangualeap/src/app/dashboard/page.tsx"],"sourcesContent":["\n\n\"use client\"\n\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\";\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from \"@/components/ui/table\";\nimport { getWordsForStudent, getUserById, getStudentsBySupervisorId } from \"@/lib/firestore\";\nimport { type Word, type User } from \"@/lib/data\";\nimport { KeyRound, Clock, BarChart, CalendarCheck, Trophy, CheckCircle, XCircle, SpellCheck, Star, Loader2, Target } from \"lucide-react\";\nimport Image from \"next/image\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { useLanguage } from \"@/hooks/use-language\";\nimport { useSearchParams } from \"next/navigation\";\nimport { useEffect, useState, useMemo, useCallback } from \"react\";\nimport Link from \"next/link\";\nimport { format, subDays, formatDistanceToNowStrict, isPast, isToday } from \"date-fns\";\nimport { Button } from \"@/components/ui/button\";\nimport { Checkbox } from \"@/components/ui/checkbox\";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\";\nimport { Alert, AlertDescription, AlertTitle } from \"@/components/ui/alert\";\nimport { SpellingPracticeCard } from \"@/components/spelling-practice-card\";\nimport { type LearningStats, updateXp, XP_AMOUNTS, getStatsForUser } from \"@/lib/stats.tsx\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { XpToast } from \"@/components/xp-toast\";\nimport { WordProgress } from \"@/lib/storage\";\n\nconst getLast7Days = () => {\n  const days = [];\n  for (let i = 0; i < 7; i++) {\n    const day = subDays(new Date(), i);\n    days.push({\n      date: format(day, \"yyyy-MM-dd\"),\n      dayInitial: format(day, \"E\")[0], // 'M', 'T', 'W', etc.\n    });\n  }\n  return days.reverse();\n};\n\nconst allTests = [\"Present Simple\", \"Past Simple\", \"Present Continuous\", \"Comprehensive\"];\n\nexport default function Dashboard() {\n  const searchParams = useSearchParams();\n  const userId = searchParams.get('userId');\n  const { t, translateContent } = useLanguage();\n  const { toast } = useToast();\n  const [loading, setLoading] = useState(true);\n  const [user, setUser] = useState<User | null>(null);\n  const [students, setStudents] = useState<User[]>([]);\n  const [stats, setStats] = useState<LearningStats | null>(null);\n  const [todaysReviewCount, setTodaysReviewCount] = useState(0);\n  const [wordsLearningCount, setWordsLearningCount] = useState(0);\n  const [wordsMasteredCount, setWordsMasteredCount] = useState(0);\n  \n  const [allStudentWords, setAllStudentWords] = useState<(Word & WordProgress)[]>([]);\n\n  const [selectedUnit, setSelectedUnit] = useState<string | null>(null);\n  const [selectedLesson, setSelectedLesson] = useState<string | null>(null);\n  \n  const last7Days = getLast7Days();\n\n  const fetchData = useCallback(async () => {\n    if (userId) {\n      setLoading(true);\n      const foundUser = await getUserById(userId);\n      setUser(foundUser || null);\n      \n      if (foundUser?.role === 'student') {\n        const words = await getWordsForStudent(userId);\n        setAllStudentWords(words);\n\n        const todayCount = words.filter(w => isToday(new Date(w.nextReview)) && w.strength >= 0).length;\n        const mastered = words.filter(w => w.strength === -1).length;\n        const learning = words.filter(w => w.strength > 0 && !isToday(new Date(w.nextReview))).length;\n\n        setTodaysReviewCount(todayCount);\n        setWordsMasteredCount(mastered);\n        setWordsLearningCount(learning);\n        \n        let currentStats = await getStatsForUser(userId);\n        \n        const { updated, amount } = await updateXp(userId, 'daily_login');\n        if (updated) {\n            toast({\n                description: <XpToast event=\"daily_login\" amount={amount} />,\n                duration: 3000,\n            });\n            currentStats = await getStatsForUser(userId);\n        }\n        \n        setStats(currentStats);\n\n      } else if (foundUser?.role === 'supervisor') {\n          const studentList = await getStudentsBySupervisorId(userId);\n          setStudents(studentList);\n      }\n    }\n    setLoading(false);\n  }, [userId, toast]);\n\n  useEffect(() => {\n    fetchData();\n  }, [fetchData]);\n\n  const newWords = useMemo(() => {\n    return allStudentWords.filter(w => w.strength === 0);\n  }, [allStudentWords]);\n  \n  const availableUnits = useMemo(() => {\n    return Array.from(new Set(newWords.map(w => w.unit).filter(Boolean)));\n  }, [newWords]);\n\n  const lessonsForSelectedUnit = useMemo(() => {\n    if (!selectedUnit) return [];\n    return Array.from(new Set(newWords.filter(w => w.unit === selectedUnit).map(w => w.lesson).filter(Boolean)));\n  }, [newWords, selectedUnit]);\n\n  const handleUnitChange = (unit: string) => {\n    setSelectedUnit(unit);\n    setSelectedLesson(null);\n  };\n  \n  const isLearnButtonDisabled = !selectedUnit || !selectedLesson;\n\n\n  const formatTime = (totalSeconds: number) => {\n    const hours = Math.floor(totalSeconds / 3600);\n    const minutes = Math.floor((totalSeconds % 3600) / 60);\n    if (hours > 0) {\n      return `${hours}h ${minutes}m`;\n    }\n    return `${minutes}m`;\n  };\n  \n  if (loading || !user || (user.role === 'student' && !stats)) {\n    return (\n        <div className=\"flex items-center justify-center min-h-[calc(100vh-8rem)]\">\n            <Loader2 className=\"h-8 w-8 animate-spin text-primary\" />\n            <p className=\"ml-4\">{t('dashboard.loading')}</p>\n        </div>\n    );\n  }\n\n  if (user?.role === \"student\") {\n    return (\n      <div className=\"space-y-6\">\n        <h1 className=\"text-3xl font-bold font-headline\">{t('dashboard.student.welcome', user.name)}</h1>\n        <p className=\"text-muted-foreground\">{t('dashboard.student.description')}</p>\n\n         <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-5\">\n            <Card className=\"h-full\">\n                <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                    <CardTitle className=\"text-sm font-medium\">\n                        {t('sidebar.learn')}\n                    </CardTitle>\n                    <Target className=\"h-4 w-4 text-muted-foreground\" />\n                </CardHeader>\n                <CardContent>\n                    <div className=\"text-2xl font-bold\">{newWords.length}</div>\n                    <p className=\"text-xs text-muted-foreground pb-2\">New words to learn</p>\n                     <div className=\"space-y-2 mt-2\">\n                        <Select onValueChange={handleUnitChange} disabled={availableUnits.length === 0}>\n                            <SelectTrigger>\n                                <SelectValue placeholder=\"Select a Unit\" />\n                            </SelectTrigger>\n                            <SelectContent>\n                                {availableUnits.map(unit => (\n                                    <SelectItem key={unit} value={unit}>{translateContent(unit)}</SelectItem>\n                                ))}\n                            </SelectContent>\n                        </Select>\n                        <Select onValueChange={(value) => setSelectedLesson(value)} disabled={!selectedUnit}>\n                             <SelectTrigger>\n                                <SelectValue placeholder=\"Select a Lesson\" />\n                            </SelectTrigger>\n                            <SelectContent>\n                                {lessonsForSelectedUnit.map(lesson => (\n                                    <SelectItem key={lesson} value={lesson}>{translateContent(lesson)}</SelectItem>\n                                ))}\n                            </SelectContent>\n                        </Select>\n                        {isLearnButtonDisabled ? (\n                            <Button className=\"w-full\" disabled>\n                                {t('dashboard.student.startReview')}\n                            </Button>\n                        ) : (\n                            <Button asChild className=\"w-full\">\n                                <Link href={`/learn?userId=${user.id}&unit=${encodeURIComponent(selectedUnit || '')}&lesson=${encodeURIComponent(selectedLesson || '')}`}>\n                                    {t('dashboard.student.startReview')}\n                                </Link>\n                            </Button>\n                        )}\n                    </div>\n                </CardContent>\n            </Card>\n             <Link href={`/dashboard/todays-reviews?userId=${user.id}`} className=\"hover:opacity-90 transition-opacity\">\n                <Card className=\"h-full\">\n                    <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                        <CardTitle className=\"text-sm font-medium\">\n                            {t('sidebar.todaysReviews')}\n                        </CardTitle>\n                        <CalendarCheck className=\"h-4 w-4 text-muted-foreground\" />\n                    </CardHeader>\n                    <CardContent>\n                        <div className=\"text-2xl font-bold\">{todaysReviewCount}</div>\n                        <p className=\"text-xs text-muted-foreground pb-2\">Words scheduled for review today.</p>\n                    </CardContent>\n                </Card>\n            </Link>\n             <Card>\n                <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                    <CardTitle className=\"text-sm font-medium\">\n                        Total XP\n                    </CardTitle>\n                    <Star className=\"h-4 w-4 text-muted-foreground\" />\n                </CardHeader>\n                <CardContent>\n                    <div className=\"text-2xl font-bold text-yellow-500\">{stats.xp.toLocaleString()}</div>\n                    <p className=\"text-xs text-muted-foreground\">\n                        {t('dashboard.student.xpDescription')}\n                    </p>\n                </CardContent>\n            </Card>\n            <Link href={`/dashboard/learning-words?userId=${user.id}`} className=\"hover:opacity-90 transition-opacity\">\n                 <Card>\n                    <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                        <CardTitle className=\"text-sm font-medium\">\n                            {t('sidebar.learningWords')}\n                        </CardTitle>\n                        <BarChart className=\"h-4 w-4 text-muted-foreground\" />\n                    </CardHeader>\n                    <CardContent>\n                        <div className=\"text-2xl font-bold\">{wordsLearningCount}</div>\n                        <p className=\"text-xs text-muted-foreground\">\n                             {t('dashboard.student.learningQueue', wordsLearningCount)}\n                        </p>\n                    </CardContent>\n                </Card>\n            </Link>\n            <Link href={`/dashboard/mastered-words?userId=${user.id}`} className=\"hover:opacity-90 transition-opacity\">\n                <Card>\n                    <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                        <CardTitle className=\"text-sm font-medium\">\n                           {t('dashboard.student.progressOverview.masteredWords')}\n                        </CardTitle>\n                        <Trophy className=\"h-4 w-4 text-muted-foreground\" />\n                    </CardHeader>\n                    <CardContent>\n                        <div className=\"text-2xl font-bold\">{wordsMasteredCount}</div>\n                        <p className=\"text-xs text-muted-foreground\">\n                            {t('dashboard.student.greatWork')}\n                        </p>\n                    </CardContent>\n                </Card>\n            </Link>\n        </div>\n        \n        <Card>\n          <CardHeader>\n            <CardTitle>{t('dashboard.student.progressOverview.title')}</CardTitle>\n            <CardDescription>{t('dashboard.student.progressOverview.description')}</CardDescription>\n          </CardHeader>\n          <CardContent className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-4\">\n               <div className=\"flex flex-col items-center justify-center p-4 rounded-lg bg-secondary\">\n                  <Clock className=\"h-8 w-8 text-primary mb-2\"/>\n                  <p className=\"text-2xl font-bold\">{formatTime(stats.reviewedToday.timeSpentSeconds)}</p>\n                  <p className=\"text-sm text-muted-foreground text-center\">{t('dashboard.student.progressOverview.timeSpentToday')}</p>\n              </div>\n              <div className=\"flex flex-col items-center justify-center p-4 rounded-lg bg-secondary\">\n                  <BarChart className=\"h-8 w-8 text-primary mb-2\"/>\n                  <p className=\"text-2xl font-bold\">{stats.totalWordsReviewed}</p>\n                  <p className=\"text-sm text-muted-foreground text-center\">{t('dashboard.student.progressOverview.totalWordsReviewed')}</p>\n              </div>\n              <div className=\"flex flex-col items-center justify-center p-4 rounded-lg bg-secondary\">\n                  <CalendarCheck className=\"h-8 w-8 text-primary mb-2\"/>\n                  <p className=\"text-2xl font-bold\">{stats.reviewedToday.count}</p>\n                  <p className=\"text-sm text-muted-foreground text-center\">{t('dashboard.student.progressOverview.reviewedToday')}</p>\n              </div>\n              <div className=\"flex flex-col items-center justify-center p-4 rounded-lg bg-secondary\">\n                  <Trophy className=\"h-8 w-8 text-primary mb-2\"/>\n                  <p className=\"text-2xl font-bold\">{wordsMasteredCount}</p>\n                  <p className=\"text-sm text-muted-foreground text-center\">{t('dashboard.student.progressOverview.masteredWords')}</p>\n              </div>\n          </CardContent>\n        </Card>\n\n        <div className=\"grid gap-6 lg:grid-cols-5\">\n             <Card className=\"lg:col-span-3\">\n                <CardHeader>\n                    <CardTitle>{t('dashboard.student.activity.title')}</CardTitle>\n                 </CardHeader>\n                 <CardContent>\n                    <div className=\"flex justify-around items-center p-4 rounded-lg bg-secondary\">\n                        {last7Days.map(({ date, dayInitial }) => {\n                         const isActive = stats.activityLog.includes(date);\n                         return (\n                             <div key={date} className=\"flex flex-col items-center gap-2\">\n                             <span className=\"text-sm font-medium text-muted-foreground\">{dayInitial}</span>\n                             {isActive ? (\n                                 <CheckCircle className=\"h-6 w-6 text-green-500\" />\n                             ) : (\n                                 <XCircle className=\"h-6 w-6 text-muted-foreground/50\" />\n                             )}\n                             </div>\n                         );\n                         })}\n                     </div>\n                 </CardContent>\n             </Card>\n             <Card className=\"lg:col-span-2\">\n                 <CardHeader>\n                   <CardTitle>{t('dashboard.student.tests.title')}</CardTitle>\n                 </CardHeader>\n                 <CardContent className=\"space-y-3\">\n                     {allTests.map(testName => (\n                       <div key={testName} className=\"flex items-center gap-2\">\n                         <Checkbox \n                           id={`test-${testName}`} \n                           checked={stats.reviewedToday.completedTests.includes(testName)}\n                           disabled \n                         />\n                         <label\n                           htmlFor={`test-${testName}`}\n                           className=\"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n                         >\n                           {testName}\n                         </label>\n                       </div>\n                     ))}\n                 </CardContent>\n             </Card>\n         </div>\n\n         <SpellingPracticeCard allWords={allStudentWords} userId={user.id} />\n       </div>\n     );\n   }\n\n   if (user?.role === \"supervisor\") {\n     const isTrial = user.trialExpiresAt && !isPast(new Date(user.trialExpiresAt));\n     \n     return (\n         <div className=\"space-y-6\">\n             <h1 className=\"text-3xl font-bold font-headline\">{t('dashboard.supervisor.title')}</h1>\n             <p className=\"text-muted-foreground\">{t('dashboard.supervisor.welcome', user.name)}</p>\n\n             {isTrial && user.trialExpiresAt && (\n                 <Alert>\n                     <Clock className=\"h-4 w-4\" />\n                     <AlertTitle>Trial Account</AlertTitle>\n                     <AlertDescription>\n                         Your trial period expires {formatDistanceToNowStrict(new Date(user.trialExpiresAt), { addSuffix: true })}.\n                     </AlertDescription>\n                 </Alert>\n             )}\n\n             <Card>\n                 <CardHeader>\n                     <CardTitle>{t('dashboard.supervisor.supervisorId.title')}</CardTitle>\n                     <CardDescription>{t('dashboard.supervisor.supervisorId.description')}</CardDescription>\n                 </CardHeader>\n                 <CardContent className=\"flex items-center gap-4\">\n                     <KeyRound className=\"h-8 w-8 text-primary\"/>\n                     <Badge variant=\"outline\" className=\"text-lg py-2 px-4\">{user.shortId}</Badge>\n                 </CardContent>\n             </Card>\n             <Card>\n                 <CardHeader>\n                     <CardTitle>{t('dashboard.supervisor.myStudents.title')}</CardTitle>\n                     <CardDescription>{t('dashboard.supervisor.myStudents.description')}</CardDescription>\n                 </CardHeader>\n                 <CardContent>\n                    {loading ? (\n                         <div className=\"flex items-center justify-center p-8\">\n                            <Loader2 className=\"h-6 w-6 animate-spin text-primary\" />\n                         </div>\n                    ) : (\n                         <Table>\n                             <TableHeader>\n                                 <TableRow>\n                                 <TableHead className=\"hidden w-[100px] sm:table-cell\">\n                                     <span className=\"sr-only\">Image</span>\n                                 </TableHead>\n                                 <TableHead>{t('dashboard.supervisor.myStudents.name')}</TableHead>\n                                 <TableHead>{t('dashboard.supervisor.myStudents.email')}</TableHead>\n                                 </TableRow>\n                             </TableHeader>\n                             <TableBody>\n                                 {students.length > 0 ? (\n                                    students.map((student) => (\n                                     <TableRow key={student.id}>\n                                         <TableCell className=\"hidden sm:table-cell\">\n                                             <Image\n                                             alt=\"Student avatar\"\n                                             className=\"aspect-square rounded-full object-contain\"\n                                             height=\"64\"\n                                             src={student.avatar}\n                                             width=\"64\"\n                                             />\n                                         </TableCell>\n                                         <TableCell className=\"font-medium\">{student.name}</TableCell>\n                                         <TableCell>{student.email}</TableCell>\n                                     </TableRow>\n                                     ))\n                                 ) : (\n                                    <TableRow>\n                                        <TableCell colSpan={3} className=\"text-center h-24\">\n                                            No students have registered with your ID yet.\n                                        </TableCell>\n                                    </TableRow>\n                                 )}\n                             </TableBody>\n                         </Table>\n                    )}\n                 </CardContent>\n             </Card>\n         </div>\n     )\n   }\n\n   return <div>{t('dashboard.loading')}</div>\n }\n    \n    \n\t\n"],"names":[],"mappings":"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","debugId":null}}]
}